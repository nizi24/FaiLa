.micropost-detail
  .micropost-header

    .micropost-header-left
      - if micropost.user.icon.attached?
        = image_tag micropost.user.icon, size: '50x50', class: 'user-icon mobile-none'
        = image_tag micropost.user.icon, size: '30x30', class: 'user-icon mobile-only'
      - else
        = image_tag 'default_icon.jpeg', size: '50x50', class: 'user-icon mobile-none'
        = image_tag 'default_icon.jpeg', size: '30x30', class: 'user-icon mobile-only'

      = link_to micropost.user.name, micropost.user
      = link_to "@#{micropost.user.unique_name}", micropost.user, class: 'user-unique-name'
      %span.timestamp #{ time_ago_in_words(micropost.created_at)}前


    .micropost-header-right
      -if current_user == micropost.user
        =button_to '削除', micropost, method: :delete,
                    data: { confirm: '本当に削除しますか？' },
                    class: 'h6 form-inline'

    .micropost-body
      -# ユーザー名が含まれている場合、プロフィールへのリンクにする
      - if scan_user_name(micropost) #micropost_helper
        - @received_users.each do |user|
          = link_to "@#{user.unique_name}", user, class: 'user-unique-name'
        = micropost.content

      - else
        = micropost.content

    .micropost-item-footer
      .micropost-item-reply
        %i.fas.fa-reply.fa-lg
        %span.reply #{micropost.received_replies.count}

      .micropost-item-likes{id: "like-form-micropost-#{micropost.id}"}
        = render partial: 'likes/like_form', locals: { object: micropost, likeable_type: 'Micropost',
                                                       likeable_id: micropost.id, user_id: micropost.user.id }

  -if logged_in?
    .reply-form
      .reply-form-header
        %h3#post-comment 返信
        %i.fas.fa-times.fa-2x.mobile-none
        %i.fas.fa-times.mobile-only
      .reply-form-content
        = form_with model: current_user.microposts.build, local: true do |f|

          = hidden_field_tag :received_micropost_id, micropost.id
          = hidden_field_tag :received_user_id,      micropost.user.id

          = f.text_area :content, class: 'comment-textarea rounded'

          = f.submit '投稿', class: 'btn btn-info btn-block'
